#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 9 #"Consolas\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 0 0 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 92 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 158 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2
35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 211 72 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 150 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 5010 0 28 3 12 #"#lang racket"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 12 #"data/gvector"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 14 #"\"lang-def.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 10 #"\"util.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 2 #" ("
0 0 14 3 15 #"all-defined-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"hash-keys"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"hash-values"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"kont?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"'"
0 0 14 3 2 #"mt"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"ar"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 12 #"tagged-expr?"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"val?"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 12 #"tagged-expr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 12 #"tagged-expr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"val?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"builtin"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"k"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"clo"
0 0 24 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 12 #"tagged-expr?"
0 0 24 3 3 #")) "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"store?"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 21 3 2 #"#t"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"hash-keys"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 6 #"andmap"
0 0 24 3 2 #" ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 4 #"val?"
0 0 24 3 1 #" "
0 0 14 3 5 #"kont?"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set->list"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 5 #"))) ("
0 0 14 3 11 #"hash-values"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 6 #"store?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"time?"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"val?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 6 #"store?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"time?"
0 0 24 3 3 #")) "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"tagged-ae?"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 3 #")) "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ae->vals"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"tagged-ae?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 6 #"store?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 2 #" ("
0 0 14 3 5 #"set/c"
0 0 24 3 1 #" "
0 0 14 3 4 #"val?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"clo"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 8 #"builtin?"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"builtin"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"or/c"
0 0 24 3 1 #" "
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 2 #") "
0 0 14 3 3 #"lit"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"lit"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 7 #"for/set"
0 0 24 3 3 #" (["
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"kont?"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 14 3 1 #"v"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"validate-state"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"env"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"store"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"time"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 21 #"\"not a valid env: ~v\""
0 0 24 3 1 #" "
0 0 14 3 3 #"env"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"store?"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"not a valid store: ~v\""
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"not a valid addr: ~v\""
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"time?"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"not a valid time: ~v\""
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 12 #"tagged-expr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"not a tagged expr: ~v\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"store"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"time"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 6 #"store?"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 23 #"\"not a valid store: ~v\""
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"not a valid addr: ~v\""
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"time?"
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"not a valid time: ~v\""
0 0 24 3 1 #" "
0 0 14 3 4 #"time"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"] "
0 0 17 3 13 #"; TODO REMOVE"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"time?"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 2 #"] "
0 0 17 3 13 #"; TODO REMOVE"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 3 #") ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"\342\200\242"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"take-at-most"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 14 3 1 #"l"
0 0 24 3 2 #" ("
0 0 14 3 4 #"take"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"set-k-cfa-k"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #") ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 27 #"strategy-is-a-normalization"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"transform-input"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 27 #"strategy-is-a-normalization"
0 0 24 3 2 #" ("
0 0 14 3 11 #"a-normalize"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #"; The paper's definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"tick-a-normalized"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"res"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 10 #"tagged-ae?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 14 3 1 #"t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-cond"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-else"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"ar"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 8 #")      ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"\342\200\242"
0 0 24 3 2 #" ("
0 0 14 3 12 #"take-at-most"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #") "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 10 #"))]       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"\342\200\242"
0 0 24 3 2 #" ("
0 0 14 3 12 #"take-at-most"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #") "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"'"
0 0 14 3 2 #"mt"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 7 #")])])])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"time?"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 44 #"\"not a valid time: ~v \\nstate: ~v \\nkont:~a\""
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 3 #"res"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #"; My hackery..."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 11 #"tick-direct"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 14 3 5 #"kont?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 5 #"time?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"res"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 10 #"tagged-ae?"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 14 3 1 #"t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-cond"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-else"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"ls"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"ls"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"ar"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #" ("
0 0 14 3 12 #"take-at-most"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 1 #" "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 4 #"))  "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 3 #") ("
0 0 14 3 12 #"take-at-most"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #") "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")) "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"'"
0 0 14 3 2 #"mt"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 7 #")])])])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 5 #"time?"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"error"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 44 #"\"not a valid time: ~v \\nstate: ~v \\nkont:~a\""
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 14 3 3 #"res"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 27 #"strategy-is-a-normalization"
0 0 24 3 2 #" ("
0 0 14 3 17 #"tick-a-normalized"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 3 #") ("
0 0 14 3 11 #"tick-direct"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-truthy"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; allocator for k-CFA"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 14 3 5 #"kont?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 6 #"gensym"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 4 #" ((("
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 6 #"e-cond"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"e-cond-l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 6 #"e-then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-else"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 8 #"e-cond-l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 3 #")) "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 4 #"kont"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"ar"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 24 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\264"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"then-l"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"else-l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-truthy"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 14 3 6 #"then-l"
0 0 24 3 1 #" "
0 0 14 3 6 #"else-l"
0 0 24 3 2 #") "
0 0 14 3 2 #"\316\264"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"apply-builtin"
0 0 24 3 1 #" "
0 0 14 3 7 #"builtin"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"  (("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 8 #"builtins"
0 0 24 3 1 #" "
0 0 14 3 7 #"builtin"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; Create a CESK* state from e"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inject"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"tagged-expr?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 6 #"state?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"a0"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 5 #" ())]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 9 #"init-time"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 27 #"strategy-is-a-normalization"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"\342\200\242"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 5 #" ()) "
0 0 21 3 1 #"'"
0 0 24 3 4 #"(() "
0 0 28 3 1 #"."
0 0 24 3 7 #" ()))])"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"hash"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"hash"
0 0 24 3 1 #" "
0 0 14 3 2 #"a0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"mt"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 2 #"a0"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"init-time"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; store utils"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"store-ref-val"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"stream-filter"
0 0 24 3 2 #" ("
0 0 14 3 5 #"not/c"
0 0 24 3 1 #" "
0 0 14 3 5 #"kont?"
0 0 24 3 3 #") ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"store-ref-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"stream-filter"
0 0 24 3 1 #" "
0 0 14 3 5 #"kont?"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 7 #"set-add"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 3 #"set"
0 0 24 3 2 #") "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Step relation"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 2 #" ("
0 0 14 3 5 #"set/c"
0 0 24 3 1 #" "
0 0 14 3 6 #"state?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 14 #"validate-state"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 7 #")      "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 21 #";; Atomic expression "
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 10 #"tagged-ae?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 8 #"for*/set"
0 0 24 3 3 #" (["
0 0 14 3 3 #"val"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ae->vals"
0 0 24 3 1 #" "
0 0 14 3 2 #"ae"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"val"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 14 #";; Application"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 8 #"for*/set"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 14 #"store-ref-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 5 #"new-k"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"ar"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 6 #"new-\317\203"
0 0 24 3 2 #" ("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 5 #"new-k"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"e0"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"new-\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 16 #";; if expression"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-cond"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-else"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 8 #"for*/set"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 14 #"store-ref-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ["
0 0 14 3 5 #"new-k"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-else"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"e-cond"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 5 #"new-k"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 7 #";; set!"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 3 #" (("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 8 #"for*/set"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 14 #"store-ref-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 8 #"new-kont"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 8 #"new-kont"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 27 #";; Lambdas and constants..."
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"set-remove"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 8 #"for*/set"
0 0 24 3 3 #" (["
0 0 14 3 1 #"k"
0 0 24 3 2 #" ("
0 0 14 3 14 #"store-ref-kont"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"ar"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"b-k"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 3 #"b-k"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 3 #"b-k"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 24 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"l1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2011"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"b-v"
0 0 24 3 2 #" ("
0 0 14 3 5 #"alloc"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2011"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 3 #"b-v"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 3 #"b-v"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"a1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"a1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"builtin"
0 0 24 3 1 #" "
0 0 14 3 7 #"call/cc"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"clo"
0 0 24 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"k1"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"_"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 14 3 2 #"k1"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"k-a"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 3 #"clo"
0 0 24 3 3 #" (("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 4 #") (("
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 8 #"NO-LABEL"
0 0 24 3 3 #")) "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #"))] "
0 0 17 3 13 #";\316\267-exapnsion"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"k-a"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"k-a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #"))] "
0 0 17 3 12 #"; from paper"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"k-a"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 4 #"kont"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"k-a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #"))] "
0 0 17 3 23 #"; what I think is right"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             )]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"fn"
0 0 24 3 2 #" ("
0 0 14 3 7 #"builtin"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"builtin"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"lit"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 13 #"apply-builtin"
0 0 24 3 1 #" "
0 0 14 3 7 #"builtin"
0 0 24 3 1 #" "
0 0 14 3 3 #"lit"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 4 #"env?"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\201"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 9 #"cond-eval"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #" ["
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"] ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 6 #"])])  "
0 0 24 29 1 #"\n"
0 0 24 3 13 #"             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 9 #"cond-eval"
0 0 24 3 1 #" "
0 0 14 3 4 #"then"
0 0 24 3 1 #" "
0 0 14 3 4 #"else"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"?"
0 0 24 3 1 #" "
0 0 14 3 5 #"addr?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"            "
0 0 17 3 112
(
 #";; TODO: How does mutation in AAM work? we just *add* the new value "
 #"to the address of the variable in the store?"
) 0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"\317\203\342\200\262"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set-count"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 2 #" ("
0 0 14 3 3 #"set"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 17 3 12 #";; what now?"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"store-set"
0 0 24 3 1 #" "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 14 3 4 #"addr"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lit"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"\317\203\342\200\262"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 5 #"()]))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"'"
0 0 24 3 6 #"())]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"iterate"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"Iterating state...\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"pretty-print"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 11 #"next-states"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set->list"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 14 3 11 #"next-states"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 7 #";; Done"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 31 #"\"Done w/ evaluation. value: ~a\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"        "
0 0 17 3 12 #";; Otherwise"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 7 #"iterate"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 11 #"next-states"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; Convert a hash of the type e -> set(e) into a DOT digraph"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"graphify"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"lines"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"flatten"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-map"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 3 #") ("
0 0 14 3 3 #"map"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"v"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 19 #"\"\\\"~a\\\" -> \\\"~a\\\";\""
0 0 24 3 1 #" "
0 0 14 3 3 #"key"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"set->list"
0 0 24 3 1 #" "
0 0 14 3 5 #"value"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #" ("
0 0 14 3 18 #"open-output-string"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"digraph {\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"labeler"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 3 #") ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"\\\"~a\\\"\""
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 9 #"hash-keys"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 24 #"\"  \\\"~a\\\" [label = ~a];\""
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 2 #" ("
0 0 14 3 7 #"labeler"
0 0 24 3 1 #" "
0 0 14 3 4 #"node"
0 0 24 3 3 #")) "
0 0 14 3 6 #"output"
0 0 24 3 4 #"))  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 4 #"line"
0 0 24 3 1 #" "
0 0 14 3 5 #"lines"
0 0 24 3 2 #"])"
0 0 17 3 1 #";"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"  ~a\""
0 0 24 3 1 #" "
0 0 14 3 4 #"line"
0 0 24 3 2 #") "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 3 #"\"}\""
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 17 #"get-output-string"
0 0 24 3 1 #" "
0 0 14 3 6 #"output"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; Finds all states reachable from state"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reachable"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mutable-set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gvector"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 2 #" ("
0 0 14 3 11 #"gvector-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 3 #"for"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"set-add!"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"gvector-add!"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mutable-set"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 2 #" ("
0 0 14 3 13 #"gvector-count"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"loop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 15 3 10 #"with-store"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 14 3 6 #"store?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 6 #"state?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"store"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"store"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 8 #"store-of"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 6 #"store?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\201"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"T"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"v"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"\317\203"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #") "
0 0 14 3 2 #"\317\203"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"combine-stores"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2031"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 7 #"key-val"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 3 #") ("
0 0 14 3 8 #"hash-set"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 24 3 3 #") ("
0 0 14 3 9 #"set-union"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 24 3 3 #") ("
0 0 14 3 3 #"set"
0 0 24 3 4 #")) ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 7 #"key-val"
0 0 24 3 5 #")))) "
0 0 14 3 3 #"\317\2031"
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash->list"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2032"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 15 #"define/contract"
0 0 24 3 2 #" ("
0 0 14 3 17 #"reachable-widened"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"state?"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 14 3 5 #"any/c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 2 #" ("
0 0 14 3 8 #"store-of"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 15 3 10 #"with-store"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-hash"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mutable-set"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 2 #" ("
0 0 14 3 7 #"gvector"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 2 #" ("
0 0 14 3 11 #"gvector-ref"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 12 #"match-define"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 11 #"step-states"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"new-store"
0 0 24 3 3 #") ("
0 0 14 3 18 #"store-widened-step"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-store"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 7 #"for/set"
0 0 24 3 3 #" (["
0 0 14 3 1 #"s"
0 0 24 3 1 #" "
0 0 14 3 11 #"step-states"
0 0 24 3 2 #"])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"set-add!"
0 0 24 3 2 #" ("
0 0 14 3 8 #"hash-ref"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 7 #"current"
0 0 24 3 2 #") "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"hash-has-key?"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 5 #"begin"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"gvector-add!"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"hash-set!"
0 0 24 3 1 #" "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #" "
0 0 14 3 1 #"s"
0 0 24 3 2 #" ("
0 0 14 3 11 #"mutable-set"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 3 #"ind"
0 0 24 3 2 #" ("
0 0 14 3 13 #"gvector-count"
0 0 24 3 1 #" "
0 0 14 3 6 #"states"
0 0 24 3 4 #")) ("
0 0 14 3 4 #"loop"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"loop"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 12 #"known-states"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";; returns a value of type (Set State, Store), where all states have"
 #" an empty store"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"store-widened-step"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 10 #"new-states"
0 0 24 3 2 #" ("
0 0 14 3 4 #"step"
0 0 24 3 2 #" ("
0 0 15 3 10 #"with-store"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 9 #"new-store"
0 0 24 3 2 #" ("
0 0 14 3 5 #"foldl"
0 0 24 3 2 #" ("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 5 #"store"
0 0 24 3 3 #") ("
0 0 14 3 14 #"combine-stores"
0 0 24 3 2 #" ("
0 0 14 3 8 #"store-of"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #") "
0 0 14 3 5 #"store"
0 0 24 3 3 #")) "
0 0 14 3 5 #"store"
0 0 24 3 2 #" ("
0 0 14 3 9 #"set->list"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-states"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 24 #"new-store-widened-states"
0 0 24 3 2 #" ("
0 0 15 3 7 #"for/set"
0 0 24 3 3 #" (["
0 0 14 3 5 #"state"
0 0 24 3 1 #" "
0 0 14 3 10 #"new-states"
0 0 24 3 4 #"]) ("
0 0 15 3 10 #"with-store"
0 0 24 3 1 #" "
0 0 14 3 5 #"state"
0 0 24 3 2 #" ("
0 0 14 3 4 #"hash"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 24 #"new-store-widened-states"
0 0 24 3 1 #" "
0 0 14 3 9 #"new-store"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"analyze"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 13 #"sugared-expr?"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 9 #"displayln"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"NOT a valid expression.\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 7 #"desugar"
0 0 24 3 2 #" ("
0 0 14 3 15 #"transform-input"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"["
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 3 #"tag"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 17 #"parse-tagged-expr"
0 0 24 3 2 #" ("
0 0 14 3 2 #"~a"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 4 #"))] "
0 0 17 3 40 #";; testing the machinary with the parser"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 13 #"graph-widened"
0 0 24 3 2 #" ("
0 0 14 3 4 #"reac"
0 0 14 3 1 #"h"
0 0 14 3 12 #"able-widened"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inject"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 5 #"dummy"
0 0 24 3 2 #" ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 20 #"\"widened-states: ~a\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash-count"
0 0 24 3 1 #" "
0 0 14 3 13 #"graph-widened"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 5 #"graph"
0 0 24 3 2 #" ("
0 0 14 3 9 #"reachable"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inject"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"states: ~a\""
0 0 24 3 2 #" ("
0 0 14 3 10 #"hash-count"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 15 #"display-to-file"
0 0 24 3 2 #" ("
0 0 14 3 8 #"graphify"
0 0 24 3 1 #" "
0 0 14 3 5 #"graph"
0 0 24 3 2 #") "
0 0 19 3 11 #"\"graph.dot\""
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"truncate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 15 #"display-to-file"
0 0 24 3 2 #" ("
0 0 14 3 8 #"graphify"
0 0 24 3 1 #" "
0 0 14 3 13 #"graph-widened"
0 0 24 3 2 #") "
0 0 19 3 19 #"\"graph-widened.dot\""
0 0 24 3 1 #" "
0 0 23 3 8 #"#:exists"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"truncate"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 7 #"iterate"
0 0 24 3 2 #" ("
0 0 14 3 6 #"inject"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 4 #"repl"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"displayln"
0 0 24 3 2 #" ("
0 0 14 3 6 #"format"
0 0 24 3 1 #" "
0 0 19 3 32 #"\"[k = ~a] Type an expression...\""
0 0 24 3 1 #" "
0 0 14 3 7 #"k-cfa-k"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 24 3 1 #" "
0 0 19 3 4 #"\"> \""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 5 #"input"
0 0 24 3 2 #" ("
0 0 14 3 4 #"read"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 7 #"analyze"
0 0 24 3 1 #" "
0 0 14 3 5 #"input"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"repl"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"example-viz"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"u"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #")("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"u"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"example-viz-large"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #")("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"d"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ["
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"r"
0 0 24 3 2 #")("
0 0 14 3 2 #"if"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"      ((("
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 1 #"e"
0 0 24 3 2 #")("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"d"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"example-8"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"u"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"x"
0 0 24 3 2 #")("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"apply"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"f"
0 0 24 3 3 #") ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 3 #"arg"
0 0 24 3 3 #") ("
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 3 #"arg"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 6 #"dummy1"
0 0 24 3 3 #" (("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 14 3 1 #"u"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 5 #"apply"
0 0 24 3 1 #" "
0 0 14 3 1 #"u"
0 0 24 3 2 #") "
0 0 14 3 1 #"i"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";(repl) "
0 0 24 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 3 #"lbl"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 7 #"call/cc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"k"
0 0 24 3 2 #") "
0 0 14 3 1 #"k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"goto"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"clbl"
0 0 24 3 3 #") ("
0 0 14 3 4 #"clbl"
0 0 24 3 1 #" "
0 0 14 3 4 #"clbl"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 6 #"double"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 3 #"res"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lbl"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 5 #"dummy"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 14 3 3 #"res"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 6 #"dummy2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ["
0 0 14 3 6 #"dummy3"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 4 #"goto"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"res"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 6 #"double"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"analyze"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 1 #"("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 3 #"lbl"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 7 #"call/cc"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"k"
0 0 24 3 2 #") "
0 0 14 3 1 #"k"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 4 #"goto"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"clbl"
0 0 24 3 3 #") ("
0 0 14 3 4 #"clbl"
0 0 24 3 1 #" "
0 0 14 3 4 #"clbl"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ["
0 0 14 3 5 #"count"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 15 3 4 #"let*"
0 0 24 3 3 #" (["
0 0 14 3 1 #"i"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 5 #"start"
0 0 24 3 2 #" ("
0 0 14 3 3 #"lbl"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 6 #"dummy2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"set!"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #" ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ["
0 0 14 3 6 #"dummy3"
0 0 24 3 2 #" ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"i"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 4 #"goto"
0 0 24 3 1 #" "
0 0 14 3 5 #"start"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 14 3 1 #"i"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 5 #"count"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0           0
